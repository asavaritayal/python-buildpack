#!/usr/bin/env bash
# bin/build <layers-dir> <platform-dir> <build-plan>

set -ex

# step 1: gather inputs

APP_DIR="$(pwd)"
LAYERS_DIR="$1"

# step 2: setup

PYTHON_VERSION="3.6.7"
PIP_UPDATE="9.0.2"

VENDOR_URL="https://lang-python.s3.amazonaws.com/${STACK}"
PYTHON_URL="${VENDOR_URL}/runtimes/python-$PYTHON_VERSION.tar.gz"

# step 3: install python

PYTHON_LAYER="$LAYERS_DIR/python"
mkdir -p "$PYTHON_LAYER"

if ! curl -sfL "$PYTHON_URL" | tar zx -C $PYTHON_LAYER; then
  echo "Runtime ($PYTHON_VERSION) is not available for ($STACK)."
  exit 1
fi

export PATH="$PYTHON_LAYER/bin:$PATH"

cat << EOF > $PYTHON_LAYER.toml
launch = true
cache = true

[metadata]
version = "$PYTHON_VERSION"
EOF

# step 4: install pip

curl -o $PYTHON_LAYER/get-pip.py -L 'https://bootstrap.pypa.io/get-pip.py'

python "$PYTHON_LAYER/get-pip.py" pip=="$PIP_UPDATE"

# step 5: run pip

PIP_LAYER="$LAYERS_DIR/pip"
mkdir -p "$PIP_LAYER/modules" "$PIP_LAYER/env"

pip install -r requirements.txt -t "$PIP_LAYER/modules" \
  --install-option="--install-scripts=$PIP_LAYER/bin" \
  --exists-action=w --disable-pip-version-check --no-cache-dir

echo -n "$PIP_LAYER/modules/" > "$PIP_LAYER/env/PYTHONPATH"

echo "launch = true" > $PIP_LAYER.toml

# step 6: write metadata (optional)

if cat requirements.txt | grep -q gunicorn; then
  script="$(grep -lnr "get_wsgi_application" **/*.py)"
  if [ -n "$script" ]; then
    module="$(echo "$script" | sed s/.py//g | sed s/\\//./g)"
    cat << EOF > $LAYERS_DIR/launch.toml
[[processes]]
type = "web"
command = "gunicorn $module --bind=0.0.0.0 --log-file -"
EOF
  fi
fi
